{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport { useIsFocused } from \"@react-navigation/core\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar FocusedStatusBar = function FocusedStatusBar(props) {\n  var useIsFocused = useIsFocused();\n  return isFocused ? _jsx(StatusBar, _objectSpread({\n    animated: true\n  }, props)) : null;\n};\n\nexport default FocusedStatusBar;","map":{"version":3,"names":["useIsFocused","FocusedStatusBar","props","isFocused"],"sources":["/Users/derimargray/dev/tutorials/NFT_Marketplace/nft_marketplace_app/components/FocusedStatusBar.js"],"sourcesContent":["import { StatusBar } from \"react-native-web\";\nimport { useIsFocused } from \"@react-navigation/core\";\n\nconst FocusedStatusBar = (props) => {\n    const useIsFocused = useIsFocused();\n\n    return isFocused ? <StatusBar animated={true} {...props} /> : null\n}\n\nexport default FocusedStatusBar"],"mappings":";;;;;;;AACA,SAASA,YAAT,QAA6B,wBAA7B;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;EAChC,IAAMF,YAAY,GAAGA,YAAY,EAAjC;EAEA,OAAOG,SAAS,GAAG,KAAC,SAAD;IAAW,QAAQ,EAAE;EAArB,GAA+BD,KAA/B,EAAH,GAA8C,IAA9D;AACH,CAJD;;AAMA,eAAeD,gBAAf"},"metadata":{},"sourceType":"module"}